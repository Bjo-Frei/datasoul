/*
 * ExportWizardForm.java
 *
 * Created on 6 de Março de 2006, 21:28
 */

package datasoul.datashow;

import datasoul.song.Song;
import datasoul.song.SongViewerPanel;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;

/**
 *
 * @author  Administrador
 */
public class ExportWizardForm extends javax.swing.JFrame {
    
    /** Creates new form ExportWizardForm */
    public ExportWizardForm() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export Wizard");
        jButton1.setText("Export Songs");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportSongsActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jButton1)
                .addContainerGap(293, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(194, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExportSongsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportSongsActionPerformed
        JFileChooser fc = new JFileChooser();
        if(fc.showSaveDialog(this)==JFileChooser.APPROVE_OPTION){
            try {
                ByteArrayOutputStream osOut = new ByteArrayOutputStream();    
                for(int i=0;i<ServiceListTable.getInstance().getRowCount();i++){
                    if(ServiceListTable.getInstance().getValueAt(i,0) instanceof Song){
                        Song song = (Song)ServiceListTable.getInstance().getValueAt(i,0);
                        SongViewerPanel svp = new SongViewerPanel();
                        svp.viewSong(song);
                        osOut = svp.exportRTFSong(osOut);
//                        osOut.write("\\page }".getBytes());                        
                    }
                }
                
                String filePath = fc.getSelectedFile().getPath();
                if(!filePath.contains(".rtf"))
                    filePath = filePath + ".rtf";
                FileOutputStream fos = new FileOutputStream(filePath);
                fos.write(osOut.toByteArray());
                fos.close();

            } catch (Exception ex) {
            }
        }
    }//GEN-LAST:event_btnExportSongsActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExportWizardForm().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
    
}
