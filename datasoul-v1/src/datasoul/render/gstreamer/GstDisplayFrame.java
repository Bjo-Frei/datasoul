/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GstDisplayFrame.java
 *
 * Created on Mar 5, 2010, 5:49:55 PM
 */

package datasoul.render.gstreamer;

import datasoul.render.ContentDisplayRenderer;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import org.gstreamer.Element;
import org.gstreamer.swing.VideoComponent;

/**
 *
 * @author samuellucas
 */
public class GstDisplayFrame extends javax.swing.JFrame {

    private MyVideoComponent vcomp;
    private ContentDisplayRenderer render;
    private boolean isPipelineActive;

    /** Creates new form GstDisplayFrame */
    public GstDisplayFrame() {
        //initComponents();
        render = new ContentDisplayRenderer() {
            @Override
            public void repaint() {
                if (!isPipelineActive){
                    GstDisplayFrame.this.repaint();
                }
            }
        };
        this.setIgnoreRepaint(true);
        this.setUndecorated(true);
    }

    public ContentDisplayRenderer getContentDisplay(){
        return render;
    }

    public void setPipelineActive(boolean b){
        isPipelineActive = b;
        if ( b == false ){
            this.repaint();
        }
    }

    public Element getVideoSink(){
        return vcomp.getElement();
    }

    public void init(int width, int height){
        vcomp = new MyVideoComponent();
        render.initDisplay(width, height);
        vcomp.setOpaque(false);
        GstDisplayFrame.this.add( vcomp,  BorderLayout.CENTER );
        vcomp.setPreferredSize(new Dimension(width, height));
        this.setPreferredSize(new Dimension(width, height));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


    public class MyVideoComponent extends VideoComponent {
            @Override
            public void paint(Graphics g){
                    super.paint (g);
                    BufferedImage img = render.getActiveImage();

                    if (img != null){
                        synchronized(img){
                            g.drawImage(img, 0,0, this.getWidth(), this.getHeight(), null);
                        }
                    }else{
                        System.out.println("Is null!");
                    }
            }
    }



}
