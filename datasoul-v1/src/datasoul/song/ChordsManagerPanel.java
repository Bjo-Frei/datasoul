/*
 * ChordsManagerPanel.java
 *
 * Created on 15 de Janeiro de 2006, 23:04
 */

package datasoul.song;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.apache.xml.serialize.OutputFormat;
import org.w3c.dom.Document;
import org.w3c.dom.Node;

/**
 *
 * @author  Administrador
 */
public class ChordsManagerPanel extends javax.swing.JPanel {

    private SongsPanel objectManager;
    private ChordsDB chordsDB;
    /**
     * Creates new form ChordsManagerPanel
     */
    public ChordsManagerPanel() {
        initComponents();
        
        setChordsDB(new ChordsDB());

        loadChords();        
        tableChordsList.setModel(getChordsDB());

        panelChordShapes.setLayout(new GridLayout());
    }

    public void loadChords(){

        File chordsFile = new File("D:/Meus Documentos/Datasoul/chordsDB.xml");

        Document dom=null;
        Node node = null;
        try {
                DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();

                //Using factory get an instance of document builder
                DocumentBuilder db = dbf.newDocumentBuilder();

                //parse using builder to get DOM representation of the XML file
                dom = db.parse(chordsFile);

                //node = dom.getDocumentElement().getChildNodes().item(0);
                node = dom.getElementsByTagName("ChordsDB").item(0);

        }catch(Exception e) {
            JOptionPane.showMessageDialog(this,"Error, the file is not well formed\nErro:"+e.getMessage(),"DataSoul Error",0);    
        }        

        try {
            getChordsDB().readObject(node);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Error, the file is not well formed\nErro:"+e.getMessage(),"DataSoul Error",0);    
        }
    }

    
    public SongsPanel getObjectManager() {
        return objectManager;
    }

    public void setObjectManager(SongsPanel objectManager) {
        this.objectManager = objectManager;
    }

    private void showChord(){
        Chord chord = (Chord)tableChordsList.getModel().getValueAt(tableChordsList.getSelectedRow(),0);
      
        panelChordShapes.removeAll();
        
        ArrayList<String> shapes = chord.getShapes();
        for(int i=0;i<shapes.size();i++){
            ChordShapePanel csp = new ChordShapePanel(shapes.get(i));
            csp.setSize(80,130);
            csp.setEditable(false);
            panelChordShapes.add(csp);
        }

        
        panelChordShapes.setBackground(Color.WHITE);
        panelChordShapes.revalidate();
        panelChordShapes.repaint();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        btnNew = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        split1 = new javax.swing.JSplitPane();
        scrollChorsList = new javax.swing.JScrollPane();
        tableChordsList = new datasoul.util.DnDTable();
        scroolChordShapesPanel = new javax.swing.JScrollPane();
        panelChordShapes = new javax.swing.JPanel();
        btnEdit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datasoul/icons/new.gif")));
        btnNew.setAlignmentY(0.0F);
        btnNew.setBorder(null);
        btnNew.setContentAreaFilled(false);
        btnNew.setPreferredSize(new java.awt.Dimension(23, 23));
        btnNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNewMouseClicked(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datasoul/icons/delete.gif")));
        btnDelete.setAlignmentY(0.0F);
        btnDelete.setBorder(null);
        btnDelete.setContentAreaFilled(false);
        btnDelete.setPreferredSize(new java.awt.Dimension(23, 23));
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeletebtnRemoveMouseClicked(evt);
            }
        });

        split1.setDividerLocation(80);
        tableChordsList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableChordsList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableChordsListKeyPressed(evt);
            }
        });
        tableChordsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableChordsListMouseClicked(evt);
            }
        });

        scrollChorsList.setViewportView(tableChordsList);

        split1.setLeftComponent(scrollChorsList);

        panelChordShapes.setBackground(new java.awt.Color(255, 255, 255));
        panelChordShapes.setForeground(new java.awt.Color(255, 255, 255));
        org.jdesktop.layout.GroupLayout panelChordShapesLayout = new org.jdesktop.layout.GroupLayout(panelChordShapes);
        panelChordShapes.setLayout(panelChordShapesLayout);
        panelChordShapesLayout.setHorizontalGroup(
            panelChordShapesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 326, Short.MAX_VALUE)
        );
        panelChordShapesLayout.setVerticalGroup(
            panelChordShapesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 289, Short.MAX_VALUE)
        );
        scroolChordShapesPanel.setViewportView(panelChordShapes);

        split1.setRightComponent(scroolChordShapesPanel);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datasoul/icons/edit.gif")));
        btnEdit.setAlignmentY(0.0F);
        btnEdit.setContentAreaFilled(false);
        btnEdit.setName("btnEdit");
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditMouseClicked(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datasoul/icons/save.gif")));
        btnSave.setAlignmentY(0.0F);
        btnSave.setBorder(null);
        btnSave.setContentAreaFilled(false);
        btnSave.setPreferredSize(new java.awt.Dimension(23, 23));
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                .add(btnSave, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnNew, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(btnEdit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(btnDelete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(250, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, split1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(split1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                .add(7, 7, 7)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnNew, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnEdit)
                    .add(btnDelete, 0, 23, Short.MAX_VALUE)
                    .add(btnSave, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableChordsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableChordsListMouseClicked
        showChord();
    }//GEN-LAST:event_tableChordsListMouseClicked

    private void tableChordsListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableChordsListKeyPressed
        showChord();
    }//GEN-LAST:event_tableChordsListKeyPressed

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        try{
            Node node = getChordsDB().writeObject();
            Document doc = node.getOwnerDocument();
            doc.appendChild( node);                        // Add Root to Document
            FileOutputStream fos = new FileOutputStream("D:/Meus Documentos/Datasoul/chordsDB.xml");
            org.apache.xml.serialize.XMLSerializer xs = new org.apache.xml.serialize.XMLSerializer();
            OutputFormat outFormat = new OutputFormat();
            outFormat.setIndenting(true);
            outFormat.setEncoding("ISO-8859-1");
            xs.setOutputFormat(outFormat);
            xs.setOutputByteStream(fos);
            xs.serialize(doc);

        } catch(Exception e){
            JOptionPane.showMessageDialog(this,"Error writing file.\nErro:"+e.getMessage(),"DataSoul Error",0);    
        }
    }//GEN-LAST:event_btnSaveMouseClicked

    private void btnEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseClicked
        ChordEditorFrame cef = new ChordEditorFrame((Chord)tableChordsList.getModel().getValueAt(tableChordsList.getSelectedRow(),0));
        cef.setVisible(true);
        cef.setLocation(evt.getX(),evt.getY());
    }//GEN-LAST:event_btnEditMouseClicked

    private void btnDeletebtnRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeletebtnRemoveMouseClicked
        if(JOptionPane.showConfirmDialog(this,"Are you shure that you want to delete this chord?","Confirm",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            tableChordsList.removeItem();
        }
        this.repaint();
    }//GEN-LAST:event_btnDeletebtnRemoveMouseClicked

    private void btnNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewMouseClicked
        Chord chord = new Chord();
        getChordsDB().addItem(chord);
        ChordEditorFrame cef = new ChordEditorFrame(chord);
        cef.setVisible(true);
        cef.setLocation(evt.getX(),evt.getY());        
    }//GEN-LAST:event_btnNewMouseClicked

    @Override
    public void paint(java.awt.Graphics g) {

        super.paint(g);

        int numColumns = (int)Math.floor(scroolChordShapesPanel.getWidth()/100);

        int numRows = (int)Math.ceil(panelChordShapes.getComponentCount()/(numColumns));
        
        ((GridLayout)panelChordShapes.getLayout()).setColumns(numColumns);
        ((GridLayout)panelChordShapes.getLayout()).setRows(numRows);

    }

    public ChordsDB getChordsDB() {
        return chordsDB;
    }

    public void setChordsDB(ChordsDB chordsDB) {
        this.chordsDB = chordsDB;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel panelChordShapes;
    private javax.swing.JScrollPane scrollChorsList;
    private javax.swing.JScrollPane scroolChordShapesPanel;
    private javax.swing.JSplitPane split1;
    private datasoul.util.DnDTable tableChordsList;
    // End of variables declaration//GEN-END:variables
    
}
