/* 
 * Copyright 2005-2010 Samuel Mello
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; version 2 of the License.
 * 
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 * 
 */

/*
 * HelpFrameKeyboard.java
 *
 * Created on Mar 31, 2010, 9:31:08 PM
 */

package datasoul.help;

import datasoul.DatasoulMainForm;

/**
 *
 * @author samuel
 */
public class HelpFrameKeyboard extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 7656550067311460787L;
	/** Creates new form HelpFrameKeyboard */
    public HelpFrameKeyboard() {
        initComponents();
        DatasoulMainForm.setDatasoulIcon(this);
        StringBuffer sb = new StringBuffer();
        sb.append(java.util.ResourceBundle.getBundle("datasoul/internationalize").getString("F4: SET FOCUS ON LIVE ITEM"));
        sb.append("\n");
        sb.append("");
        sb.append("\n");
        sb.append(java.util.ResourceBundle.getBundle("datasoul/internationalize").getString("F5: SHOW OUTPUT"));
        sb.append("\n");
        sb.append(java.util.ResourceBundle.getBundle("datasoul/internationalize").getString("F6: SHOW DISPLAY CONTROLS"));
        sb.append("\n");
        sb.append(java.util.ResourceBundle.getBundle("datasoul/internationalize").getString("F7: SHOW ALERT CONTROLS"));
        sb.append("\n");
        sb.append(java.util.ResourceBundle.getBundle("datasoul/internationalize").getString("F8: SHOW TIMER CONTROLS"));
        sb.append("\n");
        sb.append("");
        sb.append("\n");
        sb.append(java.util.ResourceBundle.getBundle("datasoul/internationalize").getString("F9: BLACK"));
        sb.append("\n");
        sb.append(java.util.ResourceBundle.getBundle("datasoul/internationalize").getString("F11: HIDE"));
        sb.append("\n");
        sb.append(java.util.ResourceBundle.getBundle("datasoul/internationalize").getString("F12: SHOW"));
        sb.append("\n");
        sb.append("");
        sb.append("\n");
        sb.append(java.util.ResourceBundle.getBundle("datasoul/internationalize").getString("<NUM>+ENTER, WITH FOCUS ON PREVIEW OR LIVE ITEM: JUMP TO SLIDE <NUM>"));
        sb.append("\n");

        jTextArea1.setText(sb.toString());


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("datasoul/internationalize"); // NOI18N
        setTitle(bundle.getString("DATASOUL - KEYBOARD SHORTCUTS")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datasoul/icons/v2/preferences-desktop-keyboard-shortcuts.png"))); // NOI18N
        jLabel1.setText(bundle.getString("KEYBOARD SHORTCUTS")); // NOI18N

        jScrollPane1.setBorder(null);

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Dialog", 1, 12));
        jTextArea1.setRows(5);
        jTextArea1.setBorder(null);
        jTextArea1.setOpaque(false);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

}


